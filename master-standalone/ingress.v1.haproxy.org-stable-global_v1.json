{
  "description": "Global is a specification for a Global resource",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "GlobalSpec defines the desired state of Global",
      "properties": {
        "config": {
          "description": "Global Global\n\n# HAProxy global configuration\n\nswagger:model global",
          "properties": {
            "anonkey": {
              "description": "anonkey\nMaximum: 4.294967295e+09\nMinimum: 0",
              "format": "int64",
              "maximum": 4294967295,
              "minimum": 0,
              "type": "integer"
            },
            "busy_polling": {
              "description": "busy polling",
              "type": "boolean"
            },
            "ca_base": {
              "description": "ca base",
              "type": "string"
            },
            "chroot": {
              "description": "chroot\nPattern: ^[^\\s]+$",
              "pattern": "^[^\\s]+$",
              "type": "string"
            },
            "close_spread_time": {
              "description": "close spread time",
              "format": "int64",
              "type": "integer"
            },
            "cluster_secret": {
              "description": "cluster secret",
              "type": "string"
            },
            "cpu_maps": {
              "description": "CPU maps",
              "items": {
                "description": "CPUMap CPU map\n\nswagger:model CPUMap",
                "properties": {
                  "cpu_set": {
                    "description": "cpu set\nRequired: true",
                    "type": "string"
                  },
                  "process": {
                    "description": "process\nRequired: true",
                    "type": "string"
                  }
                },
                "required": [
                  "cpu_set",
                  "process"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "crt_base": {
              "description": "crt base",
              "type": "string"
            },
            "daemon": {
              "description": "daemon\nEnum: [enabled disabled]",
              "enum": [
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "default_path": {
              "description": "default path",
              "properties": {
                "path": {
                  "description": "path\nPattern: ^[^\\s]+$",
                  "pattern": "^[^\\s]+$",
                  "type": "string"
                },
                "type": {
                  "description": "type\nRequired: true\nEnum: [current config parent origin]",
                  "enum": [
                    "current",
                    "config",
                    "parent",
                    "origin"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "description": {
              "description": "description",
              "type": "string"
            },
            "device_atlas_options": {
              "description": "device atlas options",
              "properties": {
                "json_file": {
                  "description": "json file",
                  "type": "string"
                },
                "log_level": {
                  "description": "log level",
                  "type": "string"
                },
                "properties_cookie": {
                  "description": "properties cookie",
                  "type": "string"
                },
                "separator": {
                  "description": "separator",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "expose_experimental_directives": {
              "description": "expose experimental directives",
              "type": "boolean"
            },
            "external_check": {
              "description": "external check",
              "type": "boolean"
            },
            "fifty_one_degrees_options": {
              "description": "fifty one degrees options",
              "properties": {
                "cache_size": {
                  "description": "cache size",
                  "format": "int64",
                  "type": "integer"
                },
                "data_file": {
                  "description": "data file",
                  "type": "string"
                },
                "property_name_list": {
                  "description": "property name list",
                  "type": "string"
                },
                "property_separator": {
                  "description": "property separator",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "gid": {
              "description": "gid",
              "format": "int64",
              "type": "integer"
            },
            "grace": {
              "description": "grace",
              "format": "int64",
              "type": "integer"
            },
            "group": {
              "description": "group\nPattern: ^[^\\s]+$",
              "pattern": "^[^\\s]+$",
              "type": "string"
            },
            "h1_accept_payload_with_any_method": {
              "description": "h1 accept payload with any method",
              "type": "boolean"
            },
            "h1_case_adjust": {
              "description": "h1 case adjusts",
              "items": {
                "description": "H1CaseAdjust h1 case adjust\n\nswagger:model H1CaseAdjust",
                "properties": {
                  "from": {
                    "description": "from\nRequired: true",
                    "type": "string"
                  },
                  "to": {
                    "description": "to\nRequired: true",
                    "type": "string"
                  }
                },
                "required": [
                  "from",
                  "to"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "h1_case_adjust_file": {
              "description": "h1 case adjust file",
              "type": "string"
            },
            "h1_do_not_close_on_insecure_transfer_encoding": {
              "description": "h1 do not close on insecure transfer encoding",
              "type": "boolean"
            },
            "h2_workaround_bogus_websocket_clients": {
              "description": "h2 workaround bogus websocket clients",
              "type": "boolean"
            },
            "hard_stop_after": {
              "description": "hard stop after",
              "format": "int64",
              "type": "integer"
            },
            "httpclient_resolvers_disabled": {
              "description": "httpclient resolvers disabled\nEnum: [enabled disabled]",
              "enum": [
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "httpclient_resolvers_id": {
              "description": "httpclient resolvers id",
              "type": "string"
            },
            "httpclient_resolvers_prefer": {
              "description": "httpclient resolvers prefer\nEnum: [ipv4 ipv6]",
              "enum": [
                "ipv4",
                "ipv6"
              ],
              "type": "string"
            },
            "httpclient_retries": {
              "description": "httpclient retries",
              "format": "int64",
              "type": "integer"
            },
            "httpclient_ssl_ca_file": {
              "description": "httpclient ssl ca file",
              "type": "string"
            },
            "httpclient_ssl_verify": {
              "description": "httpclient ssl verify\nEnum: [ none required]",
              "enum": [
                "",
                "none",
                "required"
              ],
              "type": "string"
            },
            "httpclient_timeout_connect": {
              "description": "httpclient timeout connect",
              "format": "int64",
              "type": "integer"
            },
            "insecure_fork_wanted": {
              "description": "insecure fork wanted",
              "type": "boolean"
            },
            "insecure_setuid_wanted": {
              "description": "insecure setuid wanted",
              "type": "boolean"
            },
            "issuers_chain_path": {
              "description": "issuers chain path",
              "type": "string"
            },
            "limited_quic": {
              "description": "limited quic",
              "type": "boolean"
            },
            "load_server_state_from_file": {
              "description": "load server state from file\nEnum: [global local none]",
              "enum": [
                "global",
                "local",
                "none"
              ],
              "type": "string"
            },
            "localpeer": {
              "description": "localpeer\nPattern: ^[^\\s]+$",
              "pattern": "^[^\\s]+$",
              "type": "string"
            },
            "log_send_hostname": {
              "description": "log send hostname",
              "properties": {
                "enabled": {
                  "description": "enabled\nRequired: true\nEnum: [enabled disabled]",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "type": "string"
                },
                "param": {
                  "description": "param\nPattern: ^[^\\s]+$",
                  "pattern": "^[^\\s]+$",
                  "type": "string"
                }
              },
              "required": [
                "enabled"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "lua_load_per_thread": {
              "description": "lua load per thread",
              "type": "string"
            },
            "lua_loads": {
              "description": "lua loads",
              "items": {
                "description": "LuaLoad lua load\n\nswagger:model LuaLoad",
                "properties": {
                  "file": {
                    "description": "file\nRequired: true\nPattern: ^[^\\s]+$",
                    "pattern": "^[^\\s]+$",
                    "type": "string"
                  }
                },
                "required": [
                  "file"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "lua_prepend_path": {
              "description": "lua prepend path",
              "items": {
                "description": "LuaPrependPath lua prepend path\n\nswagger:model LuaPrependPath",
                "properties": {
                  "path": {
                    "description": "path\nRequired: true\nPattern: ^[^\\s]+$",
                    "pattern": "^[^\\s]+$",
                    "type": "string"
                  },
                  "type": {
                    "description": "type\nEnum: [path cpath]",
                    "enum": [
                      "path",
                      "cpath"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "path"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "master-worker": {
              "description": "master worker",
              "type": "boolean"
            },
            "max_spread_checks": {
              "description": "max spread checks",
              "format": "int64",
              "type": "integer"
            },
            "maxcompcpuusage": {
              "description": "maxcompcpuusage",
              "format": "int64",
              "type": "integer"
            },
            "maxcomprate": {
              "description": "maxcomprate",
              "format": "int64",
              "type": "integer"
            },
            "maxconn": {
              "description": "maxconn",
              "format": "int64",
              "type": "integer"
            },
            "maxconnrate": {
              "description": "maxconnrate",
              "format": "int64",
              "type": "integer"
            },
            "maxpipes": {
              "description": "maxpipes",
              "format": "int64",
              "type": "integer"
            },
            "maxsessrate": {
              "description": "maxsessrate",
              "format": "int64",
              "type": "integer"
            },
            "maxsslconn": {
              "description": "maxsslconn",
              "format": "int64",
              "type": "integer"
            },
            "maxsslrate": {
              "description": "maxsslrate",
              "format": "int64",
              "type": "integer"
            },
            "maxzlibmem": {
              "description": "maxzlibmem",
              "format": "int64",
              "type": "integer"
            },
            "mworker_max_reloads": {
              "description": "mworker max reloads\nMinimum: 0",
              "format": "int64",
              "minimum": 0,
              "type": "integer"
            },
            "nbproc": {
              "description": "nbproc",
              "format": "int64",
              "type": "integer"
            },
            "nbthread": {
              "description": "nbthread",
              "format": "int64",
              "type": "integer"
            },
            "no-quic": {
              "description": "no quic",
              "type": "boolean"
            },
            "node": {
              "description": "node",
              "type": "string"
            },
            "noepoll": {
              "description": "noepoll",
              "type": "boolean"
            },
            "noevports": {
              "description": "noevports",
              "type": "boolean"
            },
            "nogetaddrinfo": {
              "description": "nogetaddrinfo",
              "type": "boolean"
            },
            "nokqueue": {
              "description": "nokqueue",
              "type": "boolean"
            },
            "nopoll": {
              "description": "nopoll",
              "type": "boolean"
            },
            "noreuseport": {
              "description": "noreuseport",
              "type": "boolean"
            },
            "nosplice": {
              "description": "nosplice",
              "type": "boolean"
            },
            "numa_cpu_mapping": {
              "description": "numa cpu mapping\nEnum: [enabled disabled]",
              "enum": [
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "pidfile": {
              "description": "pidfile",
              "type": "string"
            },
            "pp2_never_send_local": {
              "description": "pp2 never send local",
              "type": "boolean"
            },
            "prealloc-fd": {
              "description": "prealloc fd",
              "type": "boolean"
            },
            "presetenv": {
              "description": "preset envs",
              "items": {
                "description": "PresetEnv preset env\n\nswagger:model PresetEnv",
                "properties": {
                  "name": {
                    "description": "name\nRequired: true",
                    "type": "string"
                  },
                  "value": {
                    "description": "value\nRequired: true",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "profiling_tasks": {
              "description": "profiling tasks\nEnum: [auto on off]",
              "enum": [
                "auto",
                "on",
                "off"
              ],
              "type": "string"
            },
            "quiet": {
              "description": "quiet",
              "type": "boolean"
            },
            "resetenv": {
              "description": "resetenv",
              "type": "string"
            },
            "runtime_apis": {
              "description": "runtime a p is",
              "items": {
                "description": "RuntimeAPI runtime API\n\nswagger:model RuntimeAPI",
                "properties": {
                  "accept_netscaler_cip": {
                    "description": "accept netscaler cip",
                    "format": "int64",
                    "type": "integer"
                  },
                  "accept_proxy": {
                    "description": "accept proxy",
                    "type": "boolean"
                  },
                  "address": {
                    "description": "address\nRequired: true\nPattern: ^[^\\s]+$",
                    "pattern": "^[^\\s]+$",
                    "type": "string"
                  },
                  "allow_0rtt": {
                    "description": "allow 0rtt",
                    "type": "boolean"
                  },
                  "alpn": {
                    "description": "alpn\nPattern: ^[^\\s]+$",
                    "pattern": "^[^\\s]+$",
                    "type": "string"
                  },
                  "backlog": {
                    "description": "backlog",
                    "type": "string"
                  },
                  "ca_ignore_err": {
                    "description": "ca ignore err",
                    "type": "string"
                  },
                  "ca_sign_file": {
                    "description": "ca sign file",
                    "type": "string"
                  },
                  "ca_sign_pass": {
                    "description": "ca sign pass",
                    "type": "string"
                  },
                  "ca_verify_file": {
                    "description": "ca verify file",
                    "type": "string"
                  },
                  "ciphers": {
                    "description": "ciphers",
                    "type": "string"
                  },
                  "ciphersuites": {
                    "description": "ciphersuites",
                    "type": "string"
                  },
                  "client_sigalgs": {
                    "description": "client sigalgs",
                    "type": "string"
                  },
                  "crl_file": {
                    "description": "crl file",
                    "type": "string"
                  },
                  "crt_ignore_err": {
                    "description": "crt ignore err",
                    "type": "string"
                  },
                  "crt_list": {
                    "description": "crt list",
                    "type": "string"
                  },
                  "curves": {
                    "description": "curves",
                    "type": "string"
                  },
                  "defer_accept": {
                    "description": "defer accept",
                    "type": "boolean"
                  },
                  "ecdhe": {
                    "description": "ecdhe",
                    "type": "string"
                  },
                  "expose_fd_listeners": {
                    "description": "expose fd listeners",
                    "type": "boolean"
                  },
                  "force_sslv3": {
                    "description": "force sslv3",
                    "type": "boolean"
                  },
                  "force_tlsv10": {
                    "description": "force tlsv10",
                    "type": "boolean"
                  },
                  "force_tlsv11": {
                    "description": "force tlsv11",
                    "type": "boolean"
                  },
                  "force_tlsv12": {
                    "description": "force tlsv12",
                    "type": "boolean"
                  },
                  "force_tlsv13": {
                    "description": "force tlsv13",
                    "type": "boolean"
                  },
                  "generate_certificates": {
                    "description": "generate certificates",
                    "type": "boolean"
                  },
                  "gid": {
                    "description": "gid",
                    "format": "int64",
                    "type": "integer"
                  },
                  "group": {
                    "description": "group",
                    "type": "string"
                  },
                  "id": {
                    "description": "id",
                    "type": "string"
                  },
                  "interface": {
                    "description": "interface",
                    "type": "string"
                  },
                  "level": {
                    "description": "level\nExample: user\nEnum: [user operator admin]",
                    "enum": [
                      "user",
                      "operator",
                      "admin"
                    ],
                    "type": "string"
                  },
                  "maxconn": {
                    "description": "maxconn\nExample: 1234",
                    "format": "int64",
                    "type": "integer"
                  },
                  "mode": {
                    "description": "mode",
                    "type": "string"
                  },
                  "mss": {
                    "description": "mss",
                    "type": "string"
                  },
                  "name": {
                    "description": "name\nPattern: ^[^\\s]+$",
                    "pattern": "^[^\\s]+$",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "namespace\nExample: app",
                    "type": "string"
                  },
                  "nbconn": {
                    "description": "nbconn",
                    "format": "int64",
                    "type": "integer"
                  },
                  "nice": {
                    "description": "nice\nExample: 1",
                    "format": "int64",
                    "type": "integer"
                  },
                  "no_alpn": {
                    "description": "no alpn",
                    "type": "boolean"
                  },
                  "no_ca_names": {
                    "description": "no ca names",
                    "type": "boolean"
                  },
                  "no_sslv3": {
                    "description": "no sslv3",
                    "type": "boolean"
                  },
                  "no_tls_tickets": {
                    "description": "no tls tickets",
                    "type": "boolean"
                  },
                  "no_tlsv10": {
                    "description": "no tlsv10",
                    "type": "boolean"
                  },
                  "no_tlsv11": {
                    "description": "no tlsv11",
                    "type": "boolean"
                  },
                  "no_tlsv12": {
                    "description": "no tlsv12",
                    "type": "boolean"
                  },
                  "no_tlsv13": {
                    "description": "no tlsv13",
                    "type": "boolean"
                  },
                  "npn": {
                    "description": "npn",
                    "type": "string"
                  },
                  "prefer_client_ciphers": {
                    "description": "prefer client ciphers",
                    "type": "boolean"
                  },
                  "process": {
                    "description": "process\nPattern: ^[^\\s]+$",
                    "pattern": "^[^\\s]+$",
                    "type": "string"
                  },
                  "proto": {
                    "description": "proto",
                    "type": "string"
                  },
                  "quic-cc-algo": {
                    "description": "quic cc algo\nEnum: [cubic newreno]",
                    "enum": [
                      "cubic",
                      "newreno"
                    ],
                    "type": "string"
                  },
                  "quic-force-retry": {
                    "description": "quic force retry",
                    "type": "boolean"
                  },
                  "quic-socket": {
                    "description": "quic socket\nEnum: [connection listener]",
                    "enum": [
                      "connection",
                      "listener"
                    ],
                    "type": "string"
                  },
                  "severity_output": {
                    "description": "severity output\nExample: none\nEnum: [none number string]",
                    "enum": [
                      "none",
                      "number",
                      "string"
                    ],
                    "type": "string"
                  },
                  "sigalgs": {
                    "description": "sigalgs",
                    "type": "string"
                  },
                  "ssl": {
                    "description": "ssl",
                    "type": "boolean"
                  },
                  "ssl_cafile": {
                    "description": "ssl cafile\nPattern: ^[^\\s]+$",
                    "pattern": "^[^\\s]+$",
                    "type": "string"
                  },
                  "ssl_certificate": {
                    "description": "ssl certificate\nPattern: ^[^\\s]+$",
                    "pattern": "^[^\\s]+$",
                    "type": "string"
                  },
                  "ssl_max_ver": {
                    "description": "ssl max ver\nEnum: [SSLv3 TLSv1.0 TLSv1.1 TLSv1.2 TLSv1.3]",
                    "enum": [
                      "SSLv3",
                      "TLSv1.0",
                      "TLSv1.1",
                      "TLSv1.2",
                      "TLSv1.3"
                    ],
                    "type": "string"
                  },
                  "ssl_min_ver": {
                    "description": "ssl min ver\nEnum: [SSLv3 TLSv1.0 TLSv1.1 TLSv1.2 TLSv1.3]",
                    "enum": [
                      "SSLv3",
                      "TLSv1.0",
                      "TLSv1.1",
                      "TLSv1.2",
                      "TLSv1.3"
                    ],
                    "type": "string"
                  },
                  "strict_sni": {
                    "description": "strict sni",
                    "type": "boolean"
                  },
                  "tcp_user_timeout": {
                    "description": "tcp user timeout",
                    "format": "int64",
                    "type": "integer"
                  },
                  "tfo": {
                    "description": "tfo",
                    "type": "boolean"
                  },
                  "thread": {
                    "description": "thread",
                    "type": "string"
                  },
                  "tls_ticket_keys": {
                    "description": "tls ticket keys",
                    "type": "string"
                  },
                  "transparent": {
                    "description": "transparent",
                    "type": "boolean"
                  },
                  "uid": {
                    "description": "uid",
                    "type": "string"
                  },
                  "user": {
                    "description": "user",
                    "type": "string"
                  },
                  "v4v6": {
                    "description": "v4v6",
                    "type": "boolean"
                  },
                  "v6only": {
                    "description": "v6only",
                    "type": "boolean"
                  },
                  "verify": {
                    "description": "verify\nExample: none\nEnum: [none optional required]",
                    "enum": [
                      "none",
                      "optional",
                      "required"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "address"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "server_state_base": {
              "description": "server state base\nPattern: ^[^\\s]+$",
              "pattern": "^[^\\s]+$",
              "type": "string"
            },
            "server_state_file": {
              "description": "server state file\nPattern: ^[^\\s]+$",
              "pattern": "^[^\\s]+$",
              "type": "string"
            },
            "set_dumpable": {
              "description": "set dumpable",
              "type": "boolean"
            },
            "set_var": {
              "description": "set vars",
              "items": {
                "description": "SetVar set var\n\nswagger:model SetVar",
                "properties": {
                  "expr": {
                    "description": "expr\nRequired: true",
                    "type": "string"
                  },
                  "name": {
                    "description": "name\nRequired: true",
                    "type": "string"
                  }
                },
                "required": [
                  "expr",
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "set_var_fmt": {
              "description": "set var fmts",
              "items": {
                "description": "SetVarFmt set var fmt\n\nswagger:model SetVarFmt",
                "properties": {
                  "format": {
                    "description": "format\nRequired: true",
                    "type": "string"
                  },
                  "name": {
                    "description": "name\nRequired: true",
                    "type": "string"
                  }
                },
                "required": [
                  "format",
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "setcap": {
              "description": "setcap\nPattern: ^[^\\s]+$",
              "pattern": "^[^\\s]+$",
              "type": "string"
            },
            "setenv": {
              "description": "set envs",
              "items": {
                "description": "SetEnv set env\n\nswagger:model SetEnv",
                "properties": {
                  "name": {
                    "description": "name\nRequired: true",
                    "type": "string"
                  },
                  "value": {
                    "description": "value\nRequired: true",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "spread_checks": {
              "description": "spread checks",
              "format": "int64",
              "type": "integer"
            },
            "ssl_default_bind_ciphers": {
              "description": "ssl default bind ciphers",
              "type": "string"
            },
            "ssl_default_bind_ciphersuites": {
              "description": "ssl default bind ciphersuites",
              "type": "string"
            },
            "ssl_default_bind_client_sigalgs": {
              "description": "ssl default bind client sigalgs",
              "type": "string"
            },
            "ssl_default_bind_curves": {
              "description": "ssl default bind curves",
              "type": "string"
            },
            "ssl_default_bind_options": {
              "description": "ssl default bind options",
              "type": "string"
            },
            "ssl_default_bind_sigalgs": {
              "description": "ssl default bind sigalgs",
              "type": "string"
            },
            "ssl_default_server_ciphers": {
              "description": "ssl default server ciphers",
              "type": "string"
            },
            "ssl_default_server_ciphersuites": {
              "description": "ssl default server ciphersuites",
              "type": "string"
            },
            "ssl_default_server_client_sigalgs": {
              "description": "ssl default server client sigalgs",
              "type": "string"
            },
            "ssl_default_server_curves": {
              "description": "ssl default server curves",
              "type": "string"
            },
            "ssl_default_server_options": {
              "description": "ssl default server options",
              "type": "string"
            },
            "ssl_default_server_sigalgs": {
              "description": "ssl default server sigalgs",
              "type": "string"
            },
            "ssl_dh_param_file": {
              "description": "ssl dh param file",
              "type": "string"
            },
            "ssl_engines": {
              "description": "ssl engines",
              "items": {
                "description": "SslEngine ssl engine\n\nswagger:model SslEngine",
                "properties": {
                  "algorithms": {
                    "description": "algorithms",
                    "type": "string"
                  },
                  "name": {
                    "description": "name\nRequired: true",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "ssl_load_extra_files": {
              "description": "ssl load extra files",
              "type": "string"
            },
            "ssl_mode_async": {
              "description": "ssl mode async\nEnum: [enabled disabled]",
              "enum": [
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "ssl_propquery": {
              "description": "ssl propquery",
              "type": "string"
            },
            "ssl_provider": {
              "description": "ssl provider",
              "type": "string"
            },
            "ssl_provider_path": {
              "description": "ssl provider path",
              "type": "string"
            },
            "ssl_server_verify": {
              "description": "ssl server verify\nEnum: [none required]",
              "enum": [
                "none",
                "required"
              ],
              "type": "string"
            },
            "ssl_skip_self_issued_ca": {
              "description": "ssl skip self issued ca",
              "type": "boolean"
            },
            "stats_maxconn": {
              "description": "stats maxconn",
              "format": "int64",
              "type": "integer"
            },
            "stats_timeout": {
              "description": "stats timeout",
              "format": "int64",
              "type": "integer"
            },
            "strict_limits": {
              "description": "strict limits",
              "type": "boolean"
            },
            "thread_group_lines": {
              "description": "thread group lines",
              "items": {
                "description": "ThreadGroup thread group\n\nswagger:model ThreadGroup",
                "properties": {
                  "group": {
                    "description": "group\nRequired: true",
                    "type": "string"
                  },
                  "num_or_range": {
                    "description": "num or range\nRequired: true",
                    "type": "string"
                  }
                },
                "required": [
                  "group",
                  "num_or_range"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "thread_groups": {
              "description": "thread groups",
              "format": "int64",
              "type": "integer"
            },
            "tune_options": {
              "description": "tune options",
              "properties": {
                "buffers_limit": {
                  "description": "buffers limit",
                  "format": "int64",
                  "type": "integer"
                },
                "buffers_reserve": {
                  "description": "buffers reserve\nMinimum: 2",
                  "format": "int64",
                  "minimum": 2,
                  "type": "integer"
                },
                "bufsize": {
                  "description": "bufsize",
                  "format": "int64",
                  "type": "integer"
                },
                "comp_maxlevel": {
                  "description": "comp maxlevel",
                  "format": "int64",
                  "type": "integer"
                },
                "disable_zero_copy_forwarding": {
                  "description": "disable zero copy forwarding",
                  "type": "boolean"
                },
                "events_max_events_at_once": {
                  "description": "events max events at once\nMaximum: 10000\nMinimum: 1",
                  "format": "int64",
                  "maximum": 10000,
                  "minimum": 1,
                  "type": "integer"
                },
                "fail_alloc": {
                  "description": "fail alloc",
                  "type": "boolean"
                },
                "fd_edge_triggered": {
                  "description": "fd edge triggered\nEnum: [enabled disabled]",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "type": "string"
                },
                "h1_zero_copy_fwd_recv": {
                  "description": "h1 zero copy fwd recv\nEnum: [enabled disabled]",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "type": "string"
                },
                "h1_zero_copy_fwd_send": {
                  "description": "h1 zero copy fwd send\nEnum: [enabled disabled]",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "type": "string"
                },
                "h2_be_initial_window_size": {
                  "description": "h2 be initial window size",
                  "format": "int64",
                  "type": "integer"
                },
                "h2_be_max_concurrent_streams": {
                  "description": "h2 be max concurrent streams",
                  "format": "int64",
                  "type": "integer"
                },
                "h2_fe_initial_window_size": {
                  "description": "h2 fe initial window size",
                  "format": "int64",
                  "type": "integer"
                },
                "h2_fe_max_concurrent_streams": {
                  "description": "h2 fe max concurrent streams",
                  "format": "int64",
                  "type": "integer"
                },
                "h2_header_table_size": {
                  "description": "h2 header table size\nMaximum: 65535",
                  "format": "int64",
                  "maximum": 65535,
                  "type": "integer"
                },
                "h2_initial_window_size": {
                  "description": "h2 initial window size",
                  "format": "int64",
                  "type": "integer"
                },
                "h2_max_concurrent_streams": {
                  "description": "h2 max concurrent streams",
                  "format": "int64",
                  "type": "integer"
                },
                "h2_max_frame_size": {
                  "description": "h2 max frame size",
                  "format": "int64",
                  "type": "integer"
                },
                "h2_zero_copy_fwd_send": {
                  "description": "h2 zero copy fwd send\nEnum: [enabled disabled]",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "type": "string"
                },
                "http_cookielen": {
                  "description": "http cookielen",
                  "format": "int64",
                  "type": "integer"
                },
                "http_logurilen": {
                  "description": "http logurilen",
                  "format": "int64",
                  "type": "integer"
                },
                "http_maxhdr": {
                  "description": "http maxhdr\nMaximum: 32767\nMinimum: 1",
                  "format": "int64",
                  "maximum": 32767,
                  "minimum": 1,
                  "type": "integer"
                },
                "idle_pool_shared": {
                  "description": "idle pool shared\nEnum: [enabled disabled]",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "type": "string"
                },
                "idletimer": {
                  "description": "idletimer\nMaximum: 65535\nMinimum: 0",
                  "format": "int64",
                  "maximum": 65535,
                  "minimum": 0,
                  "type": "integer"
                },
                "listener_default_shards": {
                  "description": "listener default shards\nEnum: [by-process by-thread by-group]",
                  "enum": [
                    "by-process",
                    "by-thread",
                    "by-group"
                  ],
                  "type": "string"
                },
                "listener_multi_queue": {
                  "description": "listener multi queue\nEnum: [enabled disabled]",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "type": "string"
                },
                "lua_burst_timeout": {
                  "description": "lua burst timeout",
                  "format": "int64",
                  "type": "integer"
                },
                "lua_forced_yield": {
                  "description": "lua forced yield",
                  "format": "int64",
                  "type": "integer"
                },
                "lua_log_loggers": {
                  "description": "lua log loggers\nEnum: [enabled disabled]",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "type": "string"
                },
                "lua_log_stderr": {
                  "description": "lua log stderr\nEnum: [auto enabled disabled]",
                  "enum": [
                    "auto",
                    "enabled",
                    "disabled"
                  ],
                  "type": "string"
                },
                "lua_maxmem": {
                  "description": "lua maxmem",
                  "type": "boolean"
                },
                "lua_service_timeout": {
                  "description": "lua service timeout",
                  "format": "int64",
                  "type": "integer"
                },
                "lua_session_timeout": {
                  "description": "lua session timeout",
                  "format": "int64",
                  "type": "integer"
                },
                "lua_task_timeout": {
                  "description": "lua task timeout",
                  "format": "int64",
                  "type": "integer"
                },
                "max_checks_per_thread": {
                  "description": "max checks per thread",
                  "format": "int64",
                  "type": "integer"
                },
                "maxaccept": {
                  "description": "maxaccept",
                  "format": "int64",
                  "type": "integer"
                },
                "maxpollevents": {
                  "description": "maxpollevents",
                  "format": "int64",
                  "type": "integer"
                },
                "maxrewrite": {
                  "description": "maxrewrite",
                  "format": "int64",
                  "type": "integer"
                },
                "memory_hot_size": {
                  "description": "memory hot size",
                  "format": "int64",
                  "type": "integer"
                },
                "pattern_cache_size": {
                  "description": "pattern cache size",
                  "format": "int64",
                  "type": "integer"
                },
                "peers_max_updates_at_once": {
                  "description": "peers max updates at once",
                  "format": "int64",
                  "type": "integer"
                },
                "pipesize": {
                  "description": "pipesize",
                  "format": "int64",
                  "type": "integer"
                },
                "pool_high_fd_ratio": {
                  "description": "pool high fd ratio",
                  "format": "int64",
                  "type": "integer"
                },
                "pool_low_fd_ratio": {
                  "description": "pool low fd ratio",
                  "format": "int64",
                  "type": "integer"
                },
                "pt_zero_copy_forwarding": {
                  "description": "pt zero copy forwarding\nEnum: [enabled disabled]",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "type": "string"
                },
                "quic_frontend_conn_tx_buffers_limit": {
                  "description": "quic frontend conn tx buffers limit",
                  "format": "int64",
                  "type": "integer"
                },
                "quic_frontend_max_idle_timeout": {
                  "description": "quic frontend max idle timeout",
                  "format": "int64",
                  "type": "integer"
                },
                "quic_frontend_max_streams_bidi": {
                  "description": "quic frontend max streams bidi",
                  "format": "int64",
                  "type": "integer"
                },
                "quic_max_frame_loss": {
                  "description": "quic max frame loss",
                  "format": "int64",
                  "type": "integer"
                },
                "quic_retry_threshold": {
                  "description": "quic retry threshold",
                  "format": "int64",
                  "type": "integer"
                },
                "quic_socket_owner": {
                  "description": "quic socket owner\nEnum: [listener connection]",
                  "enum": [
                    "listener",
                    "connection"
                  ],
                  "type": "string"
                },
                "rcvbuf_backend": {
                  "description": "rcvbuf backend",
                  "format": "int64",
                  "type": "integer"
                },
                "rcvbuf_client": {
                  "description": "rcvbuf client",
                  "format": "int64",
                  "type": "integer"
                },
                "rcvbuf_frontend": {
                  "description": "rcvbuf frontend",
                  "format": "int64",
                  "type": "integer"
                },
                "rcvbuf_server": {
                  "description": "rcvbuf server",
                  "format": "int64",
                  "type": "integer"
                },
                "recv_enough": {
                  "description": "recv enough",
                  "format": "int64",
                  "type": "integer"
                },
                "runqueue_depth": {
                  "description": "runqueue depth",
                  "format": "int64",
                  "type": "integer"
                },
                "sched_low_latency": {
                  "description": "sched low latency\nEnum: [enabled disabled]",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "type": "string"
                },
                "sndbuf_backend": {
                  "description": "sndbuf backend",
                  "format": "int64",
                  "type": "integer"
                },
                "sndbuf_client": {
                  "description": "sndbuf client",
                  "format": "int64",
                  "type": "integer"
                },
                "sndbuf_frontend": {
                  "description": "sndbuf frontend",
                  "format": "int64",
                  "type": "integer"
                },
                "sndbuf_server": {
                  "description": "sndbuf server",
                  "format": "int64",
                  "type": "integer"
                },
                "ssl_cachesize": {
                  "description": "ssl cachesize",
                  "format": "int64",
                  "type": "integer"
                },
                "ssl_capture_buffer_size": {
                  "description": "ssl capture buffer size",
                  "format": "int64",
                  "type": "integer"
                },
                "ssl_ctx_cache_size": {
                  "description": "ssl ctx cache size",
                  "format": "int64",
                  "type": "integer"
                },
                "ssl_default_dh_param": {
                  "description": "ssl default dh param",
                  "format": "int64",
                  "type": "integer"
                },
                "ssl_force_private_cache": {
                  "description": "ssl force private cache",
                  "type": "boolean"
                },
                "ssl_keylog": {
                  "description": "ssl keylog\nEnum: [enabled disabled]",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "type": "string"
                },
                "ssl_lifetime": {
                  "description": "ssl lifetime",
                  "format": "int64",
                  "type": "integer"
                },
                "ssl_maxrecord": {
                  "description": "ssl maxrecord",
                  "format": "int64",
                  "type": "integer"
                },
                "ssl_ocsp_update_max_delay": {
                  "description": "ssl ocsp update max delay",
                  "format": "int64",
                  "type": "integer"
                },
                "ssl_ocsp_update_min_delay": {
                  "description": "ssl ocsp update min delay",
                  "format": "int64",
                  "type": "integer"
                },
                "stick_counters": {
                  "description": "stick counters",
                  "format": "int64",
                  "type": "integer"
                },
                "vars_global_max_size": {
                  "description": "vars global max size",
                  "format": "int64",
                  "type": "integer"
                },
                "vars_proc_max_size": {
                  "description": "vars proc max size",
                  "format": "int64",
                  "type": "integer"
                },
                "vars_reqres_max_size": {
                  "description": "vars reqres max size",
                  "format": "int64",
                  "type": "integer"
                },
                "vars_sess_max_size": {
                  "description": "vars sess max size",
                  "format": "int64",
                  "type": "integer"
                },
                "vars_txn_max_size": {
                  "description": "vars txn max size",
                  "format": "int64",
                  "type": "integer"
                },
                "zlib_memlevel": {
                  "description": "zlib memlevel\nMaximum: 9\nMinimum: 1",
                  "format": "int64",
                  "maximum": 9,
                  "minimum": 1,
                  "type": "integer"
                },
                "zlib_windowsize": {
                  "description": "zlib windowsize\nMaximum: 15\nMinimum: 8",
                  "format": "int64",
                  "maximum": 15,
                  "minimum": 8,
                  "type": "integer"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "tune_ssl_default_dh_param": {
              "description": "tune ssl default dh param",
              "format": "int64",
              "type": "integer"
            },
            "uid": {
              "description": "uid",
              "format": "int64",
              "type": "integer"
            },
            "ulimit_n": {
              "description": "ulimit n",
              "format": "int64",
              "type": "integer"
            },
            "unsetenv": {
              "description": "unsetenv",
              "type": "string"
            },
            "user": {
              "description": "user\nPattern: ^[^\\s]+$",
              "pattern": "^[^\\s]+$",
              "type": "string"
            },
            "wurfl_options": {
              "description": "wurfl options",
              "properties": {
                "cache_size": {
                  "description": "cache size",
                  "format": "int64",
                  "type": "integer"
                },
                "data_file": {
                  "description": "data file",
                  "type": "string"
                },
                "information_list": {
                  "description": "information list",
                  "type": "string"
                },
                "information_list_separator": {
                  "description": "information list separator",
                  "type": "string"
                },
                "patch_file": {
                  "description": "patch file",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "zero_warning": {
              "description": "zero warning",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "log_targets": {
          "description": "LogTargets Log Target Array\n\nHAProxy log target array (corresponds to log directives)\n\nswagger:model log_targets",
          "items": {
            "description": "LogTarget Log Target\n\nPer-instance logging of events and traffic.\n\nswagger:model log_target",
            "properties": {
              "address": {
                "description": "address\nPattern: ^[^\\s]+$",
                "pattern": "^[^\\s]+$",
                "type": "string"
              },
              "facility": {
                "description": "facility\nEnum: [kern user mail daemon auth syslog lpr news uucp cron auth2 ftp ntp audit alert cron2 local0 local1 local2 local3 local4 local5 local6 local7]",
                "enum": [
                  "kern",
                  "user",
                  "mail",
                  "daemon",
                  "auth",
                  "syslog",
                  "lpr",
                  "news",
                  "uucp",
                  "cron",
                  "auth2",
                  "ftp",
                  "ntp",
                  "audit",
                  "alert",
                  "cron2",
                  "local0",
                  "local1",
                  "local2",
                  "local3",
                  "local4",
                  "local5",
                  "local6",
                  "local7"
                ],
                "type": "string"
              },
              "format": {
                "description": "format\nEnum: [local rfc3164 rfc5424 priority short timed iso raw]",
                "enum": [
                  "local",
                  "rfc3164",
                  "rfc5424",
                  "priority",
                  "short",
                  "timed",
                  "iso",
                  "raw"
                ],
                "type": "string"
              },
              "global": {
                "description": "global",
                "type": "boolean"
              },
              "index": {
                "description": "index\nRequired: true",
                "format": "int64",
                "type": "integer"
              },
              "length": {
                "description": "length",
                "format": "int64",
                "type": "integer"
              },
              "level": {
                "description": "level\nEnum: [emerg alert crit err warning notice info debug]",
                "enum": [
                  "emerg",
                  "alert",
                  "crit",
                  "err",
                  "warning",
                  "notice",
                  "info",
                  "debug"
                ],
                "type": "string"
              },
              "minlevel": {
                "description": "minlevel\nEnum: [emerg alert crit err warning notice info debug]",
                "enum": [
                  "emerg",
                  "alert",
                  "crit",
                  "err",
                  "warning",
                  "notice",
                  "info",
                  "debug"
                ],
                "type": "string"
              },
              "nolog": {
                "description": "nolog",
                "type": "boolean"
              },
              "sample_range": {
                "description": "sample range",
                "type": "string"
              },
              "sample_size": {
                "description": "sample size",
                "format": "int64",
                "type": "integer"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "required": [
        "config"
      ],
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object",
  "x-kubernetes-validations": [
    {
      "message": "spec.config.default_path is set by ingress controller internally",
      "rule": "!has(self.spec.config.default_path)"
    },
    {
      "message": "spec.config.master-worker is set by ingress controller internally",
      "rule": "!has(self.spec.config.master__dash__worker)"
    },
    {
      "message": "spec.config.pidfile is set by ingress controller internally",
      "rule": "!has(self.spec.config.pidfile)"
    },
    {
      "message": "spec.config.localpeer is set by ingress controller internally",
      "rule": "!has(self.spec.config.localpeer)"
    }
  ]
}

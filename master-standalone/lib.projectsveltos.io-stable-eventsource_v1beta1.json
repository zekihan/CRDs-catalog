{
  "description": "EventSource is the Schema for the EventSource API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "EventSourceSpec defines the desired state of EventSource",
      "properties": {
        "aggregatedSelection": {
          "description": "This field is optional and can be used to specify a Lua function\nthat will be used to further select a subset of the resources that\nhave already been selected using the ResourceSelector field.\nThe function will receive the array of resources selected by ResourceSelectors.\nIf this field is not specified, all resources selected by the ResourceSelector\nfield will be considered.\nThis field allows to perform more complex filtering or selection operations\non the resources, looking at all resources together.\nThis can be useful for more sophisticated tasks, such as identifying resources\nthat are related to each other or that have similar properties.\nThe Lua function must return a struct with:\n- \"resources\" field: slice of matching resorces;\n- \"message\" field: (optional) message.",
          "type": "string"
        },
        "collectResources": {
          "default": false,
          "description": "CollectResources indicates whether matching resources need\nto be collected and added to EventReport.",
          "type": "boolean"
        },
        "resourceSelectors": {
          "description": "ResourceSelectors identifies what resources to select",
          "items": {
            "description": "ResourceSelector defines what resources are a match",
            "properties": {
              "evaluate": {
                "description": "Evaluate contains a function \"evaluate\" in lua language.\nThe function will be passed one of the object selected based on\nabove criteria.\nMust return struct with field \"matching\" representing whether\nobject is a match and an optional \"message\" field.",
                "type": "string"
              },
              "group": {
                "description": "Group of the resource deployed in the Cluster.",
                "type": "string"
              },
              "kind": {
                "description": "Kind of the resource deployed in the Cluster.",
                "minLength": 1,
                "type": "string"
              },
              "labelFilters": {
                "description": "LabelFilters allows to filter resources based on current labels.",
                "items": {
                  "properties": {
                    "key": {
                      "description": "Key is the label key",
                      "type": "string"
                    },
                    "operation": {
                      "description": "Operation is the comparison operation",
                      "enum": [
                        "Equal",
                        "Different"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "description": "Value is the label value",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "operation",
                    "value"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "name": {
                "description": "Name of the resource deployed in the  Cluster.",
                "type": "string"
              },
              "namespace": {
                "description": "Namespace of the resource deployed in the  Cluster.\nEmpty for resources scoped at cluster level.",
                "type": "string"
              },
              "version": {
                "description": "Version of the resource deployed in the Cluster.",
                "type": "string"
              }
            },
            "required": [
              "group",
              "kind",
              "version"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "required": [
        "resourceSelectors"
      ],
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}

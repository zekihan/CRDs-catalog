{
  "description": "HealthCheck is the Schema for the HealthCheck API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "HealthCheckSpec defines the desired state of HealthCheck",
      "properties": {
        "collectResources": {
          "default": false,
          "description": "CollectResources indicates whether matching resources need\nto be collected and added to HealthReport.",
          "type": "boolean"
        },
        "evaluateHealth": {
          "description": "The EvaluateHealth field specifies a Lua function responsible for evaluating the\nhealth of the resources selected by resourceSelectors.\nThis function can assess the health of each resource independently or consider inter-resource relationships.\nThe function must be named *evaluate* and can access all objects identified by resourceSelectors using\nthe *resources* variable. It should return an array of structured instances, each containing the following fields:\n- resource: The resource being evaluated\n- healthStatus: The health status of the resource, which can be one of \"Healthy\", \"Progressing\", \"Degraded\", or \"Suspended\"\n- message: An optional message providing additional information about the health status",
          "minLength": 1,
          "type": "string"
        },
        "resourceSelectors": {
          "description": "ResourceSelectors identifies what resources to select to evaluate health",
          "items": {
            "description": "ResourceSelector defines what resources are a match",
            "properties": {
              "evaluate": {
                "description": "Evaluate contains a function \"evaluate\" in lua language.\nThe function will be passed one of the object selected based on\nabove criteria.\nMust return struct with field \"matching\" representing whether\nobject is a match and an optional \"message\" field.",
                "type": "string"
              },
              "group": {
                "description": "Group of the resource deployed in the Cluster.",
                "type": "string"
              },
              "kind": {
                "description": "Kind of the resource deployed in the Cluster.",
                "minLength": 1,
                "type": "string"
              },
              "labelFilters": {
                "description": "LabelFilters allows to filter resources based on current labels.",
                "items": {
                  "properties": {
                    "key": {
                      "description": "Key is the label key",
                      "type": "string"
                    },
                    "operation": {
                      "description": "Operation is the comparison operation",
                      "enum": [
                        "Equal",
                        "Different"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "description": "Value is the label value",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "operation",
                    "value"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "name": {
                "description": "Name of the resource deployed in the  Cluster.",
                "type": "string"
              },
              "namespace": {
                "description": "Namespace of the resource deployed in the  Cluster.\nEmpty for resources scoped at cluster level.",
                "type": "string"
              },
              "version": {
                "description": "Version of the resource deployed in the Cluster.",
                "type": "string"
              }
            },
            "required": [
              "group",
              "kind",
              "version"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "required": [
        "evaluateHealth",
        "resourceSelectors"
      ],
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
